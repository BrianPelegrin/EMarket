@using Microsoft.AspNetCore.Identity
@using TecnoMarket.Core.Entities
@using TecnoMarket.Core.Entities.SecurityEntities
@using TecnoMarket.Core.Interfaces
@using TecnoMarket.Core.ViewModels;
@model List<ProductViewModel>
@inject UserManager<ApplicationUser> UserManager;
@inject SignInManager<ApplicationUser> SignInManager;
@inject IRepository<ShoppingCart> ShoppingCart;

@foreach (var item in @Model)
{
    <section class="py-5">
        <div class="container px-4 px-lg-5 my-5">
            <div class="row gx-4 gx-lg-5 align-items-center">
                <div class="col-md-6">
                    @if (item.Pictures != null)
                    {
                        @if (item.Pictures.Count > 0)
                        {

                            <img class="card-img-top" src="@String.Format("data:image/jpg/jpeg;base64,{0}", item.Pictures.Select(x=>x.Image).First().ToString())" alt="...">
                        }
                        else
                        {
                            <img class="card-img-top" src="https://dummyimage.com/450x300/dee2e6/6c757d.jpg" alt="...">
                        }
                    }
                </div>
                <div class="col-md-6">
                    <div class="small mb-1">@item.Category.Description</div>
                    <h1 class="display-5 fw-bolder">@item.Name</h1>
                    <div class="fs-5 mb-5">
                        <span>$@item.Price</span>
                    </div>
                    <p class="lead">
                        @item.Description
                    </p>
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <p>
                            @{
                                var user = await UserManager.GetUserAsync(User);
                            }
                        </p>
                        @if (await UserManager.IsInRoleAsync(user, "Admin") || await UserManager.IsInRoleAsync(user, "Employe"))
                        {
                            <div class="d-flex">
                                <a class="btn btn-outline-dark flex-shrink-0" asp-action="ProductUpdate" asp-controller="Products" asp-route-id="@item.Id">
                                    Editar
                                </a>
                            </div>
                        }
                        @if (await UserManager.IsInRoleAsync(user, "User"))
                        {   
                                <div class="d-flex">
                                    <input class="form-control text-center me-3" id="inputQuantity" type="num" value="1" style="max-width: 3rem" />
                                    <button class="btn btn-outline-dark flex-shrink-0" onclick="OnBuy(@item.Id)" type="button">
                                        <i class="bi-cart-fill me-1"></i>
                                        Añadir al Carrito
                                    </button>
                                </div>
                        }
                    }
                    else
                    {
                        <div class="d-flex">
                            <a class="btn btn-outline-dark flex-shrink-0" asp-action="Login" asp-controller="Session" >
                                Iniciar Sesion para agregar al carrito
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>
}

<script>
    function OnBuy(id) {
        let quantity = parseInt(document.getElementById('inputQuantity').value);
        console.log('Cantidad: ', quantity);
        console.log('Cuerpo: ', JSON.stringify({ id: id, quantity: quantity }));
        Swal.fire({
            title: 'Quieres agregar producto al carrito?',
            icon: 'question',
            showCancelButton: false,
            showDenyButton: true,
            denyButtonText: 'Cancelar'
        })
            .then((respuesta) => {
                if (respuesta.isConfirmed) {
                    fetch(`http://localhost:5211/Home/AddToCart`, {
                        method: 'POST',
                        body: JSON.stringify({ productId: id, quantity: quantity }),
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                        .then(({ ok }) => {
                            if (ok) {
                                location.reload();
                            } else {
                                location.reload();
                            }
                        });
                } else if (respuesta.isDenied) {
                    Swal.fire('Cancelado', '', 'error')
                }
            })
    }
</script>